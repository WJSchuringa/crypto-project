name: unit-test-pipeline
on: 
  push:
    branches:    
      - '**'       
jobs:
  unittests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run Unit Tests
        id: unit_tests
        run: go test
  
  aftercare:
    runs-on: ubuntu-latest
    needs: unittests
    if: always() && (needs.unittests.result == 'failure')
    steps:
      - uses: actions/checkout@v2

      - uses: JasonEtco/create-an-issue@v2
        name: Create Issue If Previous Failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_SHA: ${{github.sha}}
          GITHUB_ACTION_REPOSITORY: ${{github.event_path}}
          ACTOR: ${{github.actor}}
          REPOSITORY: ${{github.repository}}
          BRANCH: ${{github.ref_name}}
          EVENT: ${{github.event_name}}
          WORKFLOW: ${{github.workflow}}
        with:
          assignees: ${{env.ACTOR}}
          filename: .github/blame-template.md

  # test2:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: nashmaniac/create-issue-action@v1.1
  #     name: Create Issue Action
  #     with:
  #       title: Build Faile
  #       token: ${{secrets.GITHUB_TOKEN}}
  #       assignees: ${{github.actor}}
  #       labels: worflow-failed
  #       body: Workflow failed for commit ${{github.sha}}


  # create-branch:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Create Branc
  #       run: |
  #        git branch $(date +%s)
  #        git push origin $(date +%s)